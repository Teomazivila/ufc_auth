# Application Configuration
NODE_ENV=development
PORT=3000
API_VERSION=v1

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=ufc_auth
DB_USER=postgres
DB_PASSWORD=postgres123
DB_SSL=false
DB_POOL_MIN=2
DB_POOL_MAX=10

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_TTL=3600

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-in-production-minimum-32-characters
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-in-production-minimum-32-characters
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# Security Configuration
BCRYPT_ROUNDS=12
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=true

# Email Configuration
EMAIL_HOST=localhost
EMAIL_PORT=1025
EMAIL_SECURE=false
EMAIL_USER=test@example.com
EMAIL_PASS=password
EMAIL_FROM=noreply@ufcauth.com
EMAIL_FROM_NAME=UFC Auth System

# 2FA Configuration
TOTP_SERVICE_NAME=UFC Auth
TOTP_ISSUER=UFC Auth System
TOTP_WINDOW=2

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=combined
LOG_FILE=logs/app.log
LOG_MAX_SIZE=10m
LOG_MAX_FILES=5

# CORS Configuration
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# Session Configuration
SESSION_SECRET=your-session-secret-change-in-production
SESSION_MAX_AGE=86400000

# File Upload Configuration
UPLOAD_MAX_SIZE=5242880
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif

# API Documentation
SWAGGER_TITLE=UFC Auth API
SWAGGER_DESCRIPTION=API REST de Gestão de Identidades com Autenticação Forte
SWAGGER_VERSION=1.0.0
SWAGGER_CONTACT_NAME=UFC Auth Team
SWAGGER_CONTACT_EMAIL=support@ufcauth.com

# Health Check Configuration
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_INTERVAL=30000

# Development Configuration
DEV_ENABLE_SWAGGER=true
DEV_ENABLE_CORS=true
DEV_ENABLE_MORGAN=true 

# Run only unit tests
node scripts/run-tests.js --unit

# Run only integration tests  
node scripts/run-tests.js --integration

# Run with coverage report
node scripts/run-tests.js --coverage

# Run all tests with coverage
node scripts/run-tests.js --all

# Unit tests only
npm run test:unit

# Integration tests only  
npm run test:integration

# All tests
npm run test:all

# Week 4 specific tests
npm run test:week4-simple

# Unit tests with ES modules support
NODE_OPTIONS="--experimental-vm-modules" npx jest tests/unit --verbose

# Integration tests
NODE_OPTIONS="--experimental-vm-modules" npx jest tests/integration --verbose

# With coverage
NODE_OPTIONS="--experimental-vm-modules" npx jest --coverage